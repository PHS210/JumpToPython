3장 오답
1.
 shirt를 short로 봄....

4.
range(1, 101)
range 함수가 뭔지 까먹음

5.
10 대신에 len(A) 써도 될듯
len()함수는 해당 리스트의 길이를 반환하는 함수

6.
리스트 컴프리헨션이 뭔데
result = [n*2 for n in numbers if n%2==1]



4장 오답
4.
print("you""need""python")
print("you"+"need"+"python")
print("you", "need", "python")
print("".join(["you", "need", "python"]))
해당코드에서 3번째만 띄어쓰기가 반영되고 나머지는 다 붙어서 출력됨.


5.
문제의 예와 같이 파일을 닫지 않은 상태에서 다시 열면 파일에 저장한 데이터를 읽을 수 없다. 따라서 열
린 파일 객체를 close 로 닫아준 후 다시 열어서 파일의 내용을 읽어야 한다.


7.

f = open('test.txt', 'r')
body = f.read() # test.txt 의 내용을 body 변수에 저장
f.close()
body = body.replace('java', 'python') # body 문자열에서 "java"를 "python" 으로 변경
f = open('test.txt', 'w') # 파일을 쓰기모드로 열기
f.write(body)
f.close()

body.replace('java', 'python') 이렇게만 하면 안됨
body는 문자열이므로 불변(immutable) 객체이므로 교체된것은 저장되지않고 그냥 사라짐.


8.
만약 문제가 합이 아니라 평균을 구하는 것이었다면..?
그렇게 코드를 작성하면 \*\*`ZeroDivisionError`\*\*가 발생할 수 있기 때문입니다.

### 오류 발생 원인

`average = a / len(args)` 이 코드는 **`len(args)`의 값이 0일 때** 문제가 됩니다. `args` 리스트가 비어있다면(`len(args)`가 0), 0으로 나누는 연산을 시도하게 되는데, 수학적으로 0으로 나누는 것은 불가능하므로 파이썬은 \*\*`ZeroDivisionError: division by zero`\*\*라는 오류를 발생시킵니다.

이런 상황은 사용자가 파이썬 스크립트를 실행할 때 명령줄에 **아무런 숫자도 입력하지 않았을 때** 발생합니다.

```bash
# 이렇게 실행하면 오류가 발생합니다
python your_script.py 
```

이때 `sys.argv`는 `['your_script.py']`가 되고, `args = sys.argv[1:]`에 의해 `args`는 빈 리스트 `[]`가 됩니다.

-----

### 해결 방법

오류를 방지하기 위해서는 평균을 계산하기 전에 `args` 리스트에 요소가 있는지 **확인하는 조건문**을 추가해야 합니다.

```python
import sys

args = sys.argv[1:]

if len(args) > 0:  # args 리스트가 비어있지 않은지 확인
    a = 0
    for i in args:
        a += int(i)
    
    average = a / len(args)
    print(average)
else:
    print("입력된 숫자가 없습니다.")
```

이렇게 코드를 수정하면 사용자가 인자를 입력하지 않았을 때 오류를 내는 대신, "입력된 숫자가 없습니다."라는 메시지를 출력하여 더 친절하고 안정적인 프로그램이 됩니다.

